<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='worldometer_coronavirus_daily_data' inline='true' name='federated.1n87lki1o44ng216ezh770jgdvt4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='worldometer_coronavirus_daily_data' name='textscan.16l0hir01rj82k11ilrxb02xtm1d'>
            <connection class='textscan' directory='C:/Users/Dell/Desktop' filename='worldometer_coronavirus_daily_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.16l0hir01rj82k11ilrxb02xtm1d' name='worldometer_coronavirus_daily_data.csv' table='[worldometer_coronavirus_daily_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='real' name='cumulative_total_cases' ordinal='2' />
            <column datatype='real' name='daily_new_cases' ordinal='3' />
            <column datatype='real' name='active_cases' ordinal='4' />
            <column datatype='real' name='cumulative_total_deaths' ordinal='5' />
            <column datatype='real' name='daily_new_deaths' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.16l0hir01rj82k11ilrxb02xtm1d' name='worldometer_coronavirus_daily_data.csv' table='[worldometer_coronavirus_daily_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='real' name='cumulative_total_cases' ordinal='2' />
            <column datatype='real' name='daily_new_cases' ordinal='3' />
            <column datatype='real' name='active_cases' ordinal='4' />
            <column datatype='real' name='cumulative_total_deaths' ordinal='5' />
            <column datatype='real' name='daily_new_deaths' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_1C9A7DFEE303417E9489322B6B97011F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_1C9A7DFEE303417E9489322B6B97011F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_total_cases]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>cumulative_total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_1C9A7DFEE303417E9489322B6B97011F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_new_cases]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>daily_new_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_1C9A7DFEE303417E9489322B6B97011F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active_cases]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>active_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_1C9A7DFEE303417E9489322B6B97011F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_total_deaths]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>cumulative_total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_1C9A7DFEE303417E9489322B6B97011F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_new_deaths]</local-name>
            <parent-name>[worldometer_coronavirus_daily_data.csv]</parent-name>
            <remote-alias>daily_new_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_daily_data.csv_1C9A7DFEE303417E9489322B6B97011F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='worldometer_coronavirus_daily_data.csv' datatype='table' name='[__tableau_internal_object_id__].[worldometer_coronavirus_daily_data.csv_1C9A7DFEE303417E9489322B6B97011F]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Total Cases' datatype='real' name='[cumulative_total_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative Total Deaths' datatype='real' name='[cumulative_total_deaths]' role='measure' type='quantitative' />
      <column caption='Daily New Cases' datatype='real' name='[daily_new_cases]' role='measure' type='quantitative' />
      <column caption='Daily New Deaths' datatype='real' name='[daily_new_deaths]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='worldometer_coronavirus_daily_data.csv' id='worldometer_coronavirus_daily_data.csv_1C9A7DFEE303417E9489322B6B97011F'>
            <properties context=''>
              <relation connection='textscan.16l0hir01rj82k11ilrxb02xtm1d' name='worldometer_coronavirus_daily_data.csv' table='[worldometer_coronavirus_daily_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='real' name='cumulative_total_cases' ordinal='2' />
                  <column datatype='real' name='daily_new_cases' ordinal='3' />
                  <column datatype='real' name='active_cases' ordinal='4' />
                  <column datatype='real' name='cumulative_total_deaths' ordinal='5' />
                  <column datatype='real' name='daily_new_deaths' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='covid_19_clean_complete' inline='true' name='federated.0u0ozjq01tpuc61d53dap1vw6lai' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_clean_complete' name='textscan.1pqd1hx1sk9dwx12p85wr14qw1ek'>
            <connection class='textscan' directory='C:/Users/Dell/Desktop' filename='covid_19_clean_complete.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1pqd1hx1sk9dwx12p85wr14qw1ek' name='covid_19_clean_complete.csv' table='[covid_19_clean_complete#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Province/State' ordinal='0' />
            <column datatype='string' name='Country/Region' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
            <column datatype='integer' name='Deaths' ordinal='6' />
            <column datatype='integer' name='Recovered' ordinal='7' />
            <column datatype='integer' name='Active' ordinal='8' />
            <column datatype='string' name='WHO Region' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1pqd1hx1sk9dwx12p85wr14qw1ek' name='covid_19_clean_complete.csv' table='[covid_19_clean_complete#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Province/State' ordinal='0' />
            <column datatype='string' name='Country/Region' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
            <column datatype='integer' name='Deaths' ordinal='6' />
            <column datatype='integer' name='Recovered' ordinal='7' />
            <column datatype='integer' name='Active' ordinal='8' />
            <column datatype='string' name='WHO Region' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province/State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province/State]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Province/State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO Region]</local-name>
            <parent-name>[covid_19_clean_complete.csv]</parent-name>
            <remote-alias>WHO Region</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_clean_complete.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3]' role='measure' type='quantitative' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country/Region, Province/State'>
          <field>[Country/Region]</field>
          <field>[Province/State]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country/Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_clean_complete.csv' id='covid_19_clean_complete.csv_A63E7CEB263E4E5BABE7E76A334024B3'>
            <properties context=''>
              <relation connection='textscan.1pqd1hx1sk9dwx12p85wr14qw1ek' name='covid_19_clean_complete.csv' table='[covid_19_clean_complete#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Province/State' ordinal='0' />
                  <column datatype='string' name='Country/Region' ordinal='1' />
                  <column datatype='real' name='Lat' ordinal='2' />
                  <column datatype='real' name='Long' ordinal='3' />
                  <column datatype='date' name='Date' ordinal='4' />
                  <column datatype='integer' name='Confirmed' ordinal='5' />
                  <column datatype='integer' name='Deaths' ordinal='6' />
                  <column datatype='integer' name='Recovered' ordinal='7' />
                  <column datatype='integer' name='Active' ordinal='8' />
                  <column datatype='string' name='WHO Region' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Dual Axis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Calibri'>Dual Axis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_clean_complete' name='federated.0u0ozjq01tpuc61d53dap1vw6lai' />
          </datasources>
          <datasource-dependencies datasource='federated.0u0ozjq01tpuc61d53dap1vw6lai'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <alphabetic-sort column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[:Measure Names]' direction='ASC' />
          <computed-sort column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]' direction='DESC' using='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Recovered:qk]' />
          <slices>
            <column>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]' field-type='quantitative' fold='true' max='56710478' min='-108672' range-type='fixed' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Recovered:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#4e79a7' />
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Recovered:qk] + [federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk])</rows>
        <cols>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{B52410FE-AEA3-4E69-B87F-A45E42C6131C}' />
    </worksheet>
    <worksheet name='Global Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Calibri'>Global Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_clean_complete' name='federated.0u0ozjq01tpuc61d53dap1vw6lai' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u0ozjq01tpuc61d53dap1vw6lai'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Confirmed:qk]' />
              <lod column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]' />
              <lod column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Active:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[Latitude (generated)]</rows>
        <cols>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8059B968-DD57-46F0-A395-4958B3976473}' />
    </worksheet>
    <worksheet name='Recovery Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Calibri'>Top 10 Recoveries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_clean_complete' name='federated.0u0ozjq01tpuc61d53dap1vw6lai' />
          </datasources>
          <datasource-dependencies datasource='federated.0u0ozjq01tpuc61d53dap1vw6lai'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Avg' name='[avg:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]' />
              <size column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[avg:Recovered:qk]' />
              <text column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BD8B2429-C7B5-4749-9708-EFF3422E7AAE}' />
    </worksheet>
    <worksheet name='Sheet Confirmed vs Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Calibri'>Confirmed vs Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_clean_complete' name='federated.0u0ozjq01tpuc61d53dap1vw6lai' />
          </datasources>
          <datasource-dependencies datasource='federated.0u0ozjq01tpuc61d53dap1vw6lai'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Confirmed:qk]' field-type='quantitative' max='260476885' min='-29501271' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]' field-type='quantitative' max='13077025' min='-1155823' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]' />
              <size column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/times' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]</rows>
        <cols>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{CA59D654-5A48-4052-8A8A-2E2C6AC3EA37}' />
    </worksheet>
    <worksheet name='Top 10 Deaths Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Calibri'>Top 10 Deaths Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_clean_complete' name='federated.0u0ozjq01tpuc61d53dap1vw6lai' />
          </datasources>
          <datasource-dependencies datasource='federated.0u0ozjq01tpuc61d53dap1vw6lai'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]' />
              <color column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]' />
              <text column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]' />
              <text column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9816656B-3962-4337-B767-5FB744C6D571}' />
    </worksheet>
    <worksheet name='Top 10 confirmed countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Calibri'>Top 10 Confirmed Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_clean_complete' name='federated.0u0ozjq01tpuc61d53dap1vw6lai' />
          </datasources>
          <datasource-dependencies datasource='federated.0u0ozjq01tpuc61d53dap1vw6lai'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;US&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Confirmed:qk]</rows>
        <cols>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{2932F196-7BBB-4433-BB05-780DF31B1974}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='9' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='7' type-v2='layout-basic' w='89378' x='483' y='940'>
              <zone h='49059' id='3' name='Global Cases' w='32410' x='27397' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49059' id='5' name='Top 10 confirmed countries' w='26914' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49059' id='6' name='Top 10 Deaths Cases' w='30054' x='59807' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49061' id='11' name='Recovery Cases' w='34520' x='28425' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49061' id='13' name='Sheet Confirmed vs Deaths' w='26916' x='62945' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49061' id='15' name='Dual Axis' w='27942' x='483' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='940'>
              <zone h='8578' id='10' name='Top 10 Deaths Cases' pane-specification-id='0' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]' type-v2='color' w='9656' x='89861' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28202' id='12' name='Recovery Cases' pane-specification-id='0' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]' type-v2='color' w='9656' x='89861' y='9518'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15864' id='14' name='Sheet Confirmed vs Deaths' pane-specification-id='0' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Confirmed:qk]' type-v2='size' w='9656' x='89861' y='37720'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8461' id='16' name='Dual Axis' pane-specification-id='4' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[:Measure Names]' type-v2='color' w='9656' x='89861' y='53584'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='19' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='280' h='49059' id='5' is-fixed='true' name='Top 10 confirmed countries' w='26914' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49059' id='3' is-fixed='true' name='Global Cases' w='32410' x='27397' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49059' id='6' is-fixed='true' name='Top 10 Deaths Cases' w='30054' x='59807' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='10' name='Top 10 Deaths Cases' pane-specification-id='0' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]' type-v2='color' w='9656' x='89861' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49061' id='15' is-fixed='true' name='Dual Axis' w='27942' x='483' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='16' name='Dual Axis' pane-specification-id='4' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[:Measure Names]' type-v2='color' w='9656' x='89861' y='53584'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49061' id='11' is-fixed='true' name='Recovery Cases' w='34520' x='28425' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28202' id='12' name='Recovery Cases' pane-specification-id='0' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]' type-v2='color' w='9656' x='89861' y='9518'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49061' id='13' is-fixed='true' name='Sheet Confirmed vs Deaths' w='26916' x='62945' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15864' id='14' name='Sheet Confirmed vs Deaths' pane-specification-id='0' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Confirmed:qk]' type-v2='size' w='9656' x='89861' y='37720'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5E8E6470-E92A-4712-9FFF-E3F9D068F6DA}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Global Cases'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE4520EE-C75A-4BF5-8340-70C8651F65D7}' />
    </window>
    <window class='worksheet' name='Top 10 confirmed countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45683E03-9AA4-45D2-A0E8-BD0CF195824F}' />
    </window>
    <window class='worksheet' name='Top 10 Deaths Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8CCB52FE-E58C-41BE-81A6-26AE71E27D41}' />
    </window>
    <window class='worksheet' name='Recovery Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B49B9315-292E-4B94-BD3A-7238C38CA5EB}' />
    </window>
    <window class='worksheet' name='Sheet Confirmed vs Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A279AF6E-726A-4F57-8C80-2F2193FB0BA7}' />
    </window>
    <window class='worksheet' name='Dual Axis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0u0ozjq01tpuc61d53dap1vw6lai].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[:Measure Names]</field>
            <field>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{442EA23B-DFDD-469B-B03F-346FAAE8E388}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Dual Axis'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Global Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recovery Cases'>
          <highlight>
            <color-one-way>
              <field>[federated.0u0ozjq01tpuc61d53dap1vw6lai].[none:Country/Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet Confirmed vs Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Deaths Cases' />
        <viewpoint name='Top 10 confirmed countries'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FA08AFA0-C938-44DA-9C2E-E409B8EE0CF3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dual Axis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Cases' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Recovery Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dd5Bc15Wfv/tev85xenIOAAYZJEESFAMgUqRIUaIiFam1VFLtem1tecvW
      /rPesktVdm2osmvtXa+8UmnXXq2iKa0iRVEiRYoUSYBEGOQwGGBynunpns7d713/0cQAA0ye
      DoPp91WhUNPh3dPd7/feufece46QUkpMTMoUpdQGmJiUElMAJmWNKQCTssYUgElZYwrApKwx
      BWBS1pgCMClrTAGYlDWmAEzKGlMAJmWNKQCTssYUgElZYwrApKwxBWBS1pgCMClrTAGYlDWm
      AEzKGlMAJmWNKQCTssYUgElZYwrApKwxBWBS1pgCMClrTAGYlDWmAEzKGlMAJmWNKQCTssYU
      gElZYwrApKwxBWBS1lhKbYDJBkRKDMPA0DNIwwBACAXFYkFRVBCixAbmD1MAJkgp0dMp4tPj
      xKfGSc2GyCRiGNmbBaBhsTuxef04g9U4K2qw2OyI21gQwmyQUb5IKYlNjjDT30NscgSp66t6
      v1AUnMEa/E0duKsbEMrt51GbAihDpJTEJ0eZuHSKZHg6L8e0uX1UbtuDu6bxtrojmAIoM7Lp
      JOPnjhMZ6YcC/PTu6gZqdu1Hc7jyfuxCYAqgTJBSkgxPM9z1Bpl4tKBjWWwO6vbdhzNYs+Hv
      BqYAyoTZsUFGut7E0LNFGU8Ihdo99+JtaN3QIjAFsMmRUhIdH2L4xBtIY3WT3HUjBLV77sXX
      0LZhRXD7TdtNVkUyPM1I15vFP/kBpGTszFFiEyPFH3uFmALYxGRTSYa73iia27MQ0tAZOXWY
      dIHnHWvFFMAmRUrJ+LnjBZ/wrgQ9nWL09FtsRG/bFMAmJTY5SmS0v9RmzBGfGiMy3FdqM27B
      FMAmRErJ5MWTBVnnXw+T3adL6o4thCmATUhsYoRkJFRqM24hE4/mAnAbCFMAmwwpJTMDl0tt
      xqLM9F/eUHMBUwCbDD2dJDY5WmozFiUZDpGORkptxhymADYZ8anxVWd1FhVpbCiBmgLYZMSn
      xkptwrLEpzeOjaYANhNSkpydKbUVy5KMzGyYFSpTAJsIwzDIJGKlNmNZssk4+gZZDjUFsIkw
      smmM7HpPLINkMj3vESklqXSaeDK5zmPPHRA9ladjrRNzT/AmQhoGvLOHd+1kOHN+iIZaO+PR
      DDtbajh18QrCaqeuws305DhRw0ZnU8269sYvFxDL6pJQIsNYNEM4mSWeNsgaEkUIrKrAY1cJ
      OjWq3RpOTVlztqkpAJMFGZyYpsJt5dilfvZs28rV/gGGxkbREFwYnKCjsQZtPRnOi8wBIsks
      58fj9IVSJDLLi1kRUO3W2FLpoC1gR1FWZ5QpgE2EUJTcGbGuVVCBw27F7tJwahAQBifPd+P1
      enHYrYSn4njdzvXbqs4/9eJpnRNDUXqmkqxmemxIGJ3NMDqb4eRwjLsa3LQEbCu+I5gC2EQo
      Fg1FtaCvKw5gZdeOxrm/6m5+ess6Dn0NIbDY7EBufjEwk+LNvlmS2fW5b7Mpnd9eCdMasHFf
      ixebZfkprimAUjHnAtx4vXvnqrVGf1ZRVCx2J3o6tS7TCo3Fake1aEgpOTMa58RQdFVX/eXo
      DaWYSYZ4ZIsPj23pU9wUQLHIpiA6mvsXn4RkCNIxyCbByOZOesUCFgfYPGAPgKsK3HW5/5UV
      /FRCYPf4SW3ARLgbsXn8SKBrOMapkcIs284ksvzqYoj3dgaWFIEpgEIhJSSmYPICTHXD7BDo
      6eXfdwsCNAf4WqCyEyq2gtW96F3CGawmPHR1fbYXGGewmu7JBKcLdPJfI5o2+M3lMO/bHsCq
      LuwOmQLIKxL0LEyeh+GjEB4Aud68HAmZeO6Yk+dBteZE0HAP+FtBzP9hc6VIFKRc73JogRCC
      tLOStwfy6/Ysxkwiy9v9s9zf6l1wYmwKIF/oGRg9Af2/g2QB0xH0NEyczf3zNEDrIQhumxOC
      xe7EUVG1YXOCNJeXrhmVrFG8SPDlqSStFXYafLZbnjPLoqwXKXNX5p5f51yeUuBvhY7HwVMP
      QhAZ7mO4643S2LIMidpdnDJqij5uhdPCk9srUG+KE5ipEOshFYGz/w/OfL90Jz/ATC+c+Ae4
      8iLoaTy1TVhdntLZswiqzcGApbokY0/HswxHbp2DmQJYK9OX4djXc65IUbzZZTCy0P8anPhH
      RHKayq17Sm3RLYjarcykS1cgq2cqcctjpgBWi5Q5P//Ut3J3gI3G7DAc+zoeaxJXZW2prZnD
      5g0w62su6aViKJwmo89fHDAFsBoMHS4/Dz2/go26ygKQTSLOfp+aCgXVeuvEr9goFgt1ew8w
      Gs2U1I6sIZmMzZ98mwJYKYYOl34Og4dLbcnKMLJYB1+mLihK3NJIUL1jPzaPn1Ci9HsAZhKm
      AFaPlLkr/8ixUluyOqSBa6aL2mDpVrsrt+3B19hGSpdk9NU7QJl4jKyev7vtbGq+AEryzUgp
      yaZTpBJx0okYqUQMPZO7PSqqBZvDidXhwupwYrU7SltZ+JrPP/RW6WxYBwKJL34WWXeA8bHw
      XM+vwg8sqNy6h2DHToQQZNaYoBe6fBGlqZXU9AhOb5CRviu0bN/D+NWzaL4GGpubVnW89E0i
      LIoADF0nGppk5MoFxvt6mB7pJzYzTToZx1jkixGKgtXuwOH2EahrpKqpg7r2Tvw19SiqpXii
      mO6Gq78pzlgFQkgdf+wkls4nGL18GT2zlpSMlaOoFqp33oWvsX3ud1pPtCkbDxFJShz2WbKz
      I1y66MTv9ZOOjgGrE8DNdhRMAFJKZsaHudJ1mL6zJ5gZH17VtyANg1Q8RioeY2Z8mKsnc1dg
      lz9I0/a9tO87QE3btsIKIRmGCz/OQzpD6RGZGJ7Q29jue5qRM0dJhCYKMo7NG6Bu7wHs3sC8
      xy2r3KhyDc3lQVqdVNcFyMwMojm8WJ0O3F4f2ZS6+uOp8+3IeyRYz2YZuHCSc7/7NaO9lwq6
      +99fXc/OBx6l/Y77sNod+T24lHD62zB1Kb/HLTVtjyCbDxIe6mXq8pm8baK32OxUtO8g0LJt
      wW6RhpR85/g4a5gG5JW7GtzsqbvevyxvAjAMnYHzJznx658wXeT6jy5/BXsOvo9t9x7Eolnz
      c9Cx03Du2fwcayOhaHD3H4KrCiObITzcR7i/h+RsaA0XK4HV7cXf1I6vsR11me/+p2enSr4S
      9HCHj+aAfe7vdQtASkl4YpQjP/0OQ91n1m3gegjUNnLgqU9T17Fjfa5RNgVv/11hk9pKSeV2
      2P2puQQ6KSWp2Rlik6PEp8ZIRWbIpm6NmgKoVhs2qwuH6sZh92O3uXMb8YUAi4pw2BAeB8Ln
      BHX+ZvUj/REujC983GKgCPjY3kqc2nXXaV0CMHSdc6+/yLEXfoieLW2QYw4h6Lz3EPc8+Ym1
      u0X9r+WS2zYtAu74PATaFn5aSvRslmwqgaFnQIIiFJSZJGIyhpxdwUmsCETQi1JfgfC7EEIw
      FE7xYnfpLirVbo33ba+Y99iaJ8GJ2TC/+8H/YeDCyXUbllek5OKRVxjvu8yhT/1rKuoal3/P
      jWSTMHCbBLvWjIS+V9/ZT7DAnVIIVE1D1XLbFuV4GP3KKKQyK09lMCRyIow+EUYE3KgdddR6
      bLitCtF0aaLoHUH7LY+tOhAmpWRmbJjn/v4vN97JfwOh0UGe/1rOxlXd5MbOQHq2cIZtFGau
      QnTp5nUyk0U/N4B+fgBSa7/Dy1CU7PHLMDpNZ9X6K0qsBaem0BrIgwAmBq7wi6/9JZENVOF3
      MVKJGC9982/pOf7GykQgJQy/XXjDNgLSgOHFI9symSHbdRU5Ec7PeIbEuDRMR2QGt1b8BITd
      tS6sC1SJWJUlY73d/Oof/5pk7Pa5Qhq6zms/+Ee6335teRFER3Kb1suF8dO5NOqbkOks2VNX
      IZb/8oWWkWn2Z6IUM7Zf6dLYVrXwfHDFApgeGeClb/4t6dug+OrNSMPgjZ/8M72njy79wonz
      bIjc/mKRTcJ0z7yHpGHkXJ544Uqr1EejbDeKUxvUqgoebPPeshPsGisSQGI2zIvf/Jvb6sp/
      M0Y2y2vP/gPj/T0Lv0DKzRf0Wgk3fWZjcAoZKmxrVQHsTcxSrxX2YqMKONjuw2dffK1nWQHo
      2QyvfO/rRKcn82pcKcimU7z87a8Sn13Ar83Ey8v9ucZMby7VG5DJNEbfeFGGVaXkQZmg0Zen
      wOVNaIrgUIefeu/Sx19SAFJKTr3yC0Yun8urcaUkNjPNGz/6p1uT8CKDlJX7c43EFGTiSCkx
      Bichj6nHy2EJRzlYaWVnjTOvcwKPTeWxzgCNPuuyAdElBTA51Mupl5/Lo2kbg/6zJ7h8/Kaq
      CcssCW5apAGxcTAMjNEiB6kkiLFp7m5088gWP17b6pPbbkQR0Fnl4MkdFVS5tBVlAyzqHBmG
      zps/+ueNE+HNM0eff5bGzj04vf7cA7HCZEfeFsTGkdlKyBY/61VOzsJWSaPfRp3XypWpJOfH
      46vKGdJUQbPfxu5aF37H6mK7i7768rHXmRzc2CX21kMyNsuJF3/CAx/9XG4CnNzY9TQLSnIG
      mSjsxHdRsjpyNoHwu1AVwdYqBx2V9nfKmKQYm80QSepkDAPDgKzMoMs0iprGriWp99npCPgJ
      2DXs6urvIAsKIJNOcfI3P1/3Z9vodB99jT0Hn8AbrMpNgssUmZ5FJkuXpCajCfBfT1FWhKDS
      pVHp0jBqDSaS45ydPkVv5ArRbJiskUKKLBgwGIK3QmBTbPhtQZrcbXT69lDtqEURayyP3nPi
      TWanN79LYOg6p175BQ985BnEmgrXrmVQg2OXhnF6PGxv8C04+ZuJJNA0gWa1Y12fW7wyUnFk
      enWu7ujYAFFpp9brxO10EY+HERYbGV3B61jlyk7i1u9eSknvbDdHxl9jKN43/8kFvrSUkWIs
      McxYYpijE69T52zknqqH2OLdvuRc4BYB6Nks519/cXUf4Dbmyskj3PnwE7iKVeYkmyap2pgc
      HsdnE4yGU1S5FEJpgS2T5HIow96mAPHRSXxN7dTmeZ/PYjatZqdKYmaQs5MJ7m4NcOT0YWzu
      GnbUBVDVKGdHBW45gStQz5aaqhUdT9409winQ7w89At6Zi+u6mPcyEh8kJ/2fZcWdwfvaXg/
      AVvlgq+75R4x1nuJ0NjQmge+3cimU/ScOFzUvrWXekeJJSWjo1P4g16mw3FevzBCQ7WXmoCL
      3pGZIi/ISlazBByeDtFY34jP5cbp8lNp1xkY7SeSgeRMH2/1j3Gxr2/5A80NL9/5T3J1tpvv
      XP76uk7+G+mL9vCdy9+gO3xuwVSYWwTQc+LNvAx8O3Hl5BFksTbZCwWvXcOiqQR8bqo9NlLp
      DEGvg9+d7CeSSOP32HE6HViLlTOmarDANsbFqGnZRv+loxy70kulrwKPy4vb5cOu2aiuaaLB
      baOpZuUFcIUl5+ednznJT3q/Szyb33SbpB7n5/3Pcmr61lSYeRtisuk03/+LL5OKl2hFoESo
      qsLHHqrDbS/PMkmyaifZxP6CJL+tBKW9hh7vBM8N/ACjgAUIBILHGz/MzsAdc/OCeb/4xEBP
      2Z38ALpukEyVvmpZqRCaC+EqXQnFKTXCC4M/KujJDyCRvDj0M0YT1138eQIYvny+oAZsZGLJ
      8hUAdj+K312SoXUh+VX4BdJGcVbhsjLLLwd+RFrPZbvOCUBKyXjf5aIYsRGZiZWxAJyViEpP
      SWqIDlrGGMsWt5vNdGqCo5O5VJjrAjB0QqODRTVkIzG9QPOEssFdA5oFUekt6rASyWnbIunp
      BebE5GHi2eh1ASRj0ds633+9TITTq9s7vFmw+8GWayCnNFUuGGQqFBPqDL1aaVLQk3qCs6Gu
      6wIoh8jvUsQSOrOJ278E4qrxNs31IFa8TkRtYJk35I8j7vMYonR9Fs6FTl4XQCw8XTJDNgIS
      6JsoQzeoZn4rJbWjDlFR+AnxbIuDPrW0KeiTybHrAkjFS7PXV7V7sGoKdo8Pi81N3ZYd2Gxa
      SWyZoYKi+gClRnPkeg7fgLCoqDuawH1rCZF8oTRXMe6PY1D6LjtzAtCzpVkFsfrqcDkt+Gqb
      qG3fTmS0v5ibkuahWytyrUbLheq9oNyabSc0C5Y9reDJfyKS0lyF0lbDdLqEXTVvoOShT2kY
      70TlBCMXTuCqaSdYW/w+snM03FO6sYuJUKB+/+JP2zQs+9oQtf78jKcqqNsbUdpqEEIQz64l
      4Jpi5NwM06PzmxMOdq99GXVOAKqlNG10UtMDOOt2INKzOCrr0VRBPFKa+pGqRYOqXWDzlWT8
      ohLoANfSFxphUVE7G1F3N8NqU5znDgKi0otl/xZEjX8uBSFjrGWnoU50bJZTL55jeixC13On
      uHh8mPhskr6uQSa6R4ivciFj7qy3OUpTsk7qKQbPd839HZ0YKIkdAFaHEyw2aHoXXP5lyewo
      PAJaDs4FvqSUZGWWsfgQQ/E+ppOTRDJh0kYKgcCq2PDWeglEbDRFAwRTbgTK0rMli4Ko9KLU
      B3PVom8KslnE2i64qt1O7ZZq7Jk4lgof4ako/qAdr1dleDzDzq2r20AxZ4XdXdwgyEZk7juo
      vzvXEyyxSVfGqnaArxmA0fgwp6bfpjt8jqS+gl1hTvA63bTTzG7bLoIEQNdBiFxWp8OaO+E9
      ToS6uIdtV9cyv7BRv0sjk7CQ1exUBMK07qpBVSA5GcJXufAGo6WYE4A7sPCGgXLCc+07UK3Q
      8V44873SGlQIVCu0P8Z0apLXRl+kJ3IBuZrdBwIiROniHKcyF9jq3clDdY/hs64ufuC3BVdp
      OICK3avOtV/yVlwXkWarxr9A7c/lmBOAyxvAYrWRTReuJN5Gx1t5g09cuQOqdsLE5qmJBGC0
      HORE7CJvjP1m3QlohjS4GD5Db/Qyh+oeZ1fgzhXtwwWottciEKsT3xJYtLXtHZ2zVrFY8FeX
      0RLgTagWDV913fUHhICt7wfb5nENM95GnpfDvDLyy7xmX6b0JL8a/AkvDv0MfYUpzZWOGhwW
      1/IvLCCaol0XgBCCquaOUtpTUirqmtCsN+XE2zyw/SMgirEzvbCkLXZ+6kxyIVK4O9rp6WM8
      1/8s2QUqTt+MKlS2+nYUzJaVsMW7Y34coK69s1S2lJzaju0LPxFohy2PF9eYPGMoKr/2avRm
      Cl/ftTt8jt8MP4exgiIDuwJ3opQoFCUQ7K64a/7ote2dy3b626w0btuz8BNCQMMBaLq/uAbl
      CYngaLCKC6J4mb6np49xenrx5hvXqHU00OIpjddR72yi0dU6XwB2l4e69kWuhJsYl6+Cqub2
      xV8gRG5VqOFA8YzKB0JlouUAr8viVHy+kd+OvEAotXS6gxCCh2rfi7rGmMBaUYTKwbrHc43/
      bn6y4877imrMRqBl9/7l+wsLBba+D5of4rZImFM0jO0f4hU5tiJ3JN9kjDSvjvxq2T0WlfZq
      DlQ/VCSrctwVvI86Z6554i0CaNqxD4enDFIB3kEIhW13P7jgc4ZhoOtZstksuq4jEdD+KGx7
      /1wO/YZEc8HeZxhweRiIla6+a0/kAuOJpVOehRDcW32QVs/WJV+XLxpcLTxQ+8hcZPqWX9Fq
      d7Lt7oc4+fLmrw0KUL91J4Ha3NVASsn42CiXL16k7+pVpiYmiMdjZLNZNE3D5XJTWV1FS1sH
      WxuepGLiVcRGa6bta4YdHwNHgONXv11SUySS41OHeZ/zo0u+ThUq729+mn+5+i1G4oVLhamy
      1/LBlk9hUa6n2y94Gdtx/3s49+ZLZEpYMLVY7H33k+iGwflTJ3nt5ZcZGhxAGgu7DDOhEEOD
      A5w8fhxFUWhtquNQq50tvhSi1M01FC2X39P8ACgWopkI/dErpbUJuBK5SDKbwG5ZOvXBrjr4
      aOtnea7/WXqj+S/O0Ohq4amWT+K8KfawoAAcHh873vXIpmyOcSP1W3aiW5x84+/+lv7e3lW9
      1zAMrvQNcbUfdjY4eWKng6C9FHsqBFRsyU3SXdVzCW4D0V6ysvS9HZJ6gpH4IG3e5V0cu8XB
      h1o/wxtjv+HY5Jt5qRMkULgjeA8P1j6GVb11njevMtyNpBNxfvjf/yOJhfppbQIUVaVq37s5
      cqyLbGb9J4rDbuWDD3ayLxjLtR0qBr4WaD2US22+Kdvy14M/XbAUYCm4t+ohHqp7bBXvkAzF
      BvjtyAvrcomqHXUcqnucZncbiy1cLCoAgCtdR3jle18rauHYYiAlhBUPk6k8r+YIwZNPPcUD
      u+sRI8cgdGXBPrzrwmKHyu1Qfw94Gxet5fO9y99gKN6f37HXSIe3kw+3PrPq90kp6Yv2cHLq
      bfqjPStK39AUjSZXO/uCd9Pq2bpsbtKSSxmte++h9cwxek9vnu7pUkLIsDFdCO9ASp7/2c+w
      2j7BPe96BpGKwNTFXCvSyODamnAIBaxu8LdCsDPn7ljsyxaximRWNjnX0xni0QwuvwNlkV66
      6yWSXvlCgaHrxCMhQqNDhCdGic5MEUjGsWc8TGTHiTuzpJ1gDXiweb04HV4cFicBW5AaRwP1
      rkYcqmtF/cFgGQEoisK7PvQMk4NXiYZu/zapEohLC9O6lUKt5Uspee7H/0JNXR0tbW3QcG/u
      n56G+CRExyA+AckZSEchk8jdJYRAKhYyaZVEVCGdtpOWPtL4kFY/StKKJWLFPhXCWe3BHnCh
      LJFvn9JXktUr6T7cg6+2As1hJdQ7hrepGtIJ0gmdWDiJ5tAwhIrfZ2FsKEZjh5+x3hCeGh8W
      qwUMHYfHvuQJt5wtUkqmh/u5fOJNhi6dITwxijQW9v8tXDtpx7E43Xgb22jb20HL7v1Y7bdu
      vFmOJV2ga0z0X+EXX/8r9MztXTZEl4L+jAu9CPknVdU1fOnLf4LVunxqiZSSmauTTHePkZxe
      WXUOi13D2xKkYms1tgU2r//Nmf9KZlmXIU3PWxNYZBxFUxkcSuH22VEycTrvrOHqpJXMyDBu
      nweHW2Hg3AiVjX5ETT361ARSz63jt+xrXPKG5NF8/MGOL9/yuKHrDFw4yalXfsHEYg3MV4jF
      ZqfznoPsevCxVe1tUb/yla98ZbkXOb1+vMEq+s933dbV08LCTUwvTvJVPBbD7nDQ3Nq26FVJ
      Skl8Msrg692EusfJJlbulxlZg8RUlFDPOJl4GkfQjWK5nrV6YvLwCgSgMN03SjJp4K3xk4qm
      qNlSjcNlxevTSKlOLDKF1WYjORvHMMDhseGurUSmU1j1NIbPhz+wdAkVj+bljsrraSRSSqaG
      +njlu1/j9G+fJx5ef4NCQ88y0d/DpbdfQ+oGwcZWVHX5YOWK7gDXjD7/xksc+dl3kSUIra+X
      us47OHJxkHS6eHcxj9fLl//sPy14FzB0g4nTQ0xdHEEa67+oWBxWGg6046rNlTn8VvffM5YY
      XvdxF0cy0DVA7Z4mNHVpt6PF3cHT7Z8DQNeznHn1Bbpe/ElBW/BW1Ddz8JO/T6CmYUm3aMWX
      QyEEO+5/Dwc++OlV+1mlZtu9h/C07SnqyQ8wG4lw8dzZWx7XMzoDr11i8vxwXk5+gGwiTd+r
      F5nuHkNKScUiPbHyh6DpjuZlT35gzpZ0MsHL3/oqx375g4L3n54e7ue5r/45fWeWzkpdlT8g
      hGDHu97DwU/+wfLJYxsAIQR7H34/D3zkX3H29OmS2HC6q2ve33pGp//Vi0RHChBfMSSjx/qY
      ujhKvas5/8dfI/WuZpKxWV74xn+j/9yJoo2bSSV4+Tv/mwtHXlnUdV+1QyyEoOPO+3jvF/4D
      Lv9aNjYXB81m58Gnv8D+xz9GMplkZKg0pd8H+nrJvBNok4Zk+K0rxMcLm5s/1tWPP+Rf8f7c
      QmIRGtVqNS99838xMVD81AxpGLz5429xpevwyprkrZTa9k6e+tKf0bR937oMLASB2gae/MM/
      ZevdDyKEYHpqqujuzzVmIxFi0VwVtNDlcSL9RSi1IiF5apYKo/SVPhqczXT99IeM9V4qmQ3S
      0Hn9h/+Xsd7uW55b1yXC6Q3w6Of/mAef/gKODVBXyKJZ2ffIUzz1R/+ZYP11F2AmtLKTrqq+
      iV179xIM3PpZvL61fT7DMIiEw2TiacZOFi8yq6eyNIw2FG28xbBdnKX3VOkDqdlMmle//3US
      0fllFded1C6EYNs9D9G0fS8nX/45l956lWyR4wVCUWnesY/9T3wMX1XdLZP0VHJlpV4mhgfw
      e9yEkwpBvxPN4cfi9KBHp7B7K3Ha7Sh2Dy7NIBpPEY5nUBJTRFNLr4qlkkkmzgxhZIu7elYd
      qsEddBO1lqbxoTOhMfXGqZKMvRDR0BRv/+JZHvr4FxbuErkeHB4fB576DB/+9/+FHfe/B81W
      +BbniqrSuudu3v+Hf8ojv/dH+KvrF1yhEqsM8SuaHZfDitfrw2aBkbEpmjq2kU2laWqqQ7Vo
      SIudtvoKYsuc/ADZZIaZvuJH0lWpsn1qV9HHBRBS4DwRwchDomE+6Tn++jxXKK/bmoQQeIPV
      vOtDn+XOxz7M1a4j9HQdZmLgyqI59mvBX11P29572LL/QTyB4LJ5MQ7HysU4NTVBJjaLraGD
      dCxMaDYOSE4efg2bzUb/wDB2kWVyIkKFI7CiXQCZiQRqtjQBxMpQJVtbd9CdKm4H0Pp4kPjV
      jZGMdyNSSk68+GOe+OKfIBQlvwK4EbvTzY7738P2+x4mFp5mqPssI5fPMzF4lXgkhL7CK4Oi
      qDg8Xirqm6lt66Sxcy++qloUdeW1evwVQYQQK4piT0/mrtTd5+fXzwnPzI9W+iurudzTt+zx
      LBYLzBqUbB+xhHvFA8zYQ0wki9OPq8HZjPfoDGtI/SsKoz0XGO/voaZ1a+EEcA2hKLgDlXTe
      e4jOew9h6DrJ2CzR0CSzoUkSsxHSiRh6NoOUEtViwWp3Ynd7cPsr8VRU4nD7ULW1d40JBoPY
      HQ4S8fz9JDOTK6u04HF7UbMKlHDHWHYyzYfu/jTPXvknwunCrkIF7dU87H2UXzkuTcwAAAf0
      SURBVF75i4KOsx6klHQf/V1xBHAziqri9Ppxev1Ut2wpypia1UpLaxsXFojKFprG2ibQS5s/
      lQonaND8fLz9c/zo6reZShWmTEqto4EPtz7D1cOvb/jEyf5zJ8ikPl36DjHFYt9di3dDKSQ7
      tq1uEhqLzdA/MbaguxZPxNe0NymTSCN1ic8a4FNbvkinb5EiYGtEINhTsZ+Pt38el+Zm6GJp
      ou6rIRmbZXKwt3wE0LlrFz5/8VqAAtTW1dHU1LKKdxgcPX8SDJ1IZJLjF08RSWbovnqGq+MT
      RGZnCYcn6Lp0imh65TvNjKwxJyi76uDJ5o/xgeZPrLqk+UIEbJV8uPUzPNbwFFbVRiadYmKw
      dKVYVsPolYvFd4FKhd1u58F3v5vnfvyjoo156NHHUBZoQrc4gm2NzZzt76Ex4KapqZNL/RfQ
      42GGBkZpDVTisEJjbQPDk6Nsq29ck12KUOj076bNs41zoS66pt5atVtU7ajjzuABOv170G4o
      MxINTZJJJtdkV7GZHh0oHwEAHHjgQU4cfZvhwcLnBW3p7GTvnXcxO7iaXHfJdGQGi6Ji6BlO
      XjpFe209veEIXpcLp8OB027FaXOQyKx8WVmxKAuuFFtVK3dU3su+4D1MJEfpne1mMNbPTHqa
      RDY218dLUzScFjcBW5BGVwutni0EbdULxlwik+O3Tbp8eGK0vARgsVh4+tPP8LW/+R+kUoVr
      BOLxevnIJz6JEALNuZqsWYVd2+4EIDQ1TJu/HocK7bW3ZnY67StvZm2xa0u2KxJCUO2oo9pR
      x71IDGmQNbJzzSsEChbFgvJON8+liEfWt7lF1ezYnQ7ikZlFl62FYkGgY6wzlTweCZXPHOAa
      tfX1fOzTzxSsK6bVZuNTv/c5AhW5TFnNZUNZQ+ueQDB38ucDm3c1e2UFilCxqjZsqh2baseq
      Wt/JLF3+GJnU+tyfmvYdWGwu6to6sLs82JweNKePmpY2NLuHmpY2LA43VquNqrbtOBy25Q+6
      hK1lJwCA3fv28fHPPIO2jtjCQtjtdj77hS/StuX68q5qs2DzFT4tZClc1UVMVFzvlllFpaK+
      iUQkRLChCV9dE/6aeiyaDX9NHRbNis1TidPrw+l0UL915zpMleUpAIA9d9zJF/7NvyVQUZGX
      49XU1fH7f/Tv2LJtfpMRIQSehuKuPs03ANz1eWp2vQIsN3fZWSXZRIShy5ewOd0IzY2/ooJk
      NIzF6cdIRdGcPixCothcKDJLNr32XCPNalv5nuDNSiwa5aUXnufokSNrqhBntVq5/9AhDj78
      HuyL5Bylo0kuP3cqb9sfV4OrxkvrI8VrRXT11Nu8/O2vFm289eAN1pTXJHghXG43T330ae4/
      eIjDv/sdp44fJxpdfseWzx/gjv37OfDAg/j8/iV9bM1lw9tUQbivSCUTbyC4vW75F+URb/Cd
      +qS3wXXVW1Vj3gFuREqJoesMDQ7S33uVifFxYrOzZDIZNKsVj9dLVXU1re3t1Nbnqg2sdHKZ
      mk3S8/xppF68JUJXrY+Wd3cWtYhBKhHj+3/+5dui3e6eQ+8z7wA3IoRAtVhobm2lubU1r8e2
      eexU7axn/HRx9iYrmkrtnc1Fr+BhszupqGtivC//Jc7zTW3btvKdBJeCyh11uGqL032n9s4W
      7H5nUcaahxDUb1n7ykyx0Gx2qpo7TAEUE6EqNN7fgT1Q2BOzclc9/vbSbYhv23sPQtnYp1b9
      1l3YXR5TAMXGYtNoObQdR3DlkdwVI6BqdwPVexpLWrzMX11PVdMSXTc3AFv3PwDkcU+wycqx
      ODRaHu7E31aVt2MqmkrDfR1U7V66FGAxEIrC7oNPlNSGpaioa6Jh227AFEDJUDUL9QfaaHpo
      K1b3+oJHnsYAHU/sxt9aWfKT/xrNO+4g2NBaajMWZO/DH0C15LIAzGXQDYChG0xdHGWmZ5x0
      dGXLh4qm4q73E+ysxVGx8oYQxWT06iWe//pf5bUgwnqp37KTx7/45bk5iimADYShGyRDMWJj
      EZKhOOloEj2jgyFRNBXNYcXmc+Cs8uCs8mCx5zeXKd9IKTn8029z/o2XSm0KkGsB/IEv/Rn+
      6vq5x8w4wAZCURWclR6clZ5Sm5IXhBDc/cTTTPRfYbLUu8SE4L4PfmbeyQ/mHMCkwGg2O498
      9kt4KvI34V8LdzzyFB133X/L46YATAqOOxDk0c//MU5fabJidz7wGHc8+sGFqwaacwCTYhGZ
      HOPFf/qfzIyPFGU8IRT2PfIB7nz0Q4sG5kwBmBSVVDzGGz/+Z66ePFLQcWxONw989HO07N6/
      5AqZKQCTomMYBle6DnP0lz/IS4O8GxFC0LzrLg584FO4/MFll4dNAZiUjGR0lvNvvsT5N39D
      Mra+rjlCCGraOtn38Pup37JzxblIpgBMSk4qEafvzFF6ThxmrLcbQ1950S+n10/L7v103Pku
      qpraC9Mo28SkGEgpSScTjPd2MzXcR3hilOjMFJlkAsMwsGgadpcXb2U1vup6alu35hqiKMqa
      I+GmAEzKGjMOYFLWmAIwKWtMAZiUNaYATMoaUwAmZY0pAJOyxhSASVljCsCkrDEFYFLWmAIw
      KWtMAZiUNaYATMoaUwAmZY0pAJOyxhSASVljCsCkrDEFYFLWmAIwKWtMAZiUNaYATMoaUwAm
      ZY0pAJOyxhSASVljCsCkrDEFYFLWmAIwKWtMAZiUNaYATMqa/w8VnfFCobhGcQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet Confirmed vs Deaths' width='192'>
      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
      4OilXAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Deaths Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAJpklEQVR4nO3dSW8b9x2H8Wc43EWKpETtsuzIctIqjhMYSBoETQ5F0UN7KXrqsehLau9F
      X0OBoEADtAiaJm4WJ269SZa1y9pXiotIzvx7UOLaMJPAsiLS/n0/F4kjQvxR0MP5c8AhPeec
      Q8SoSLsHEGknBSCmRR+98NnMDT69d6Nds0iHS0Rj/H7sVaiU2j3KqXksgGtTX/KH9//Urlmk
      w2WTXfzuvd/C1mq7Rzk1WgKJaS0DiMW7SPke2VSWWDTF6y9Nko76Zz2bdLCN3V3+NbNIuRm2
      voJz7BxW2a9Wz3awpxRttbG3OEG2fJfeoUnSsSRTi/8lEYtTaXb2nZGzM79/yJXhHj66v8TF
      bIxoMsPS5ibjgwMsrq3jJTOMZJPMb2/w7qVL7R73W7XcAzjn8DwPgM+nr3Px3CSj+cKZDiad
      rVKtcG3uAT2pFPe39+lLQKke8PHCKkO5NEP5LLObu+0e83u1DGB7e54L598kHlYoFAYhDDhq
      1M96Nulg3ckEHhCL+oz3FwmaDYj45JM+n8ytsl+pUkgnyafS7R71O7VcAjXrB/ztxj8fXl5Y
      u3dmA8nz4epLF57Y9stc75nP8ax0FEhMaxlAJBLnF1fewQPOD0/y4/5+APxoivcuv8PF3iLD
      fZd4fWQEP5ri56/9BJ8IY70DjA+NE/fO8i5IOyysr/PBzSk2a02cC7g2fZ9rC2usbG3ywa1p
      Vktl/n5zis+XNlje3uOwtM9S6ajdYz+hZQC+7xOGx4e3StUD8pkcACMDF7k/9wUDxTFKpRL5
      bJ64H6HehAgR3ph4k5FMnLpeXvfCG8x3k4p67JXrHFUOcakslcN9CtksXdEIO/u77AY+W4cl
      ZtfW+Mf8BsOZeLvHfkLLABqNKrXgOICDyuHD7UEYkowniUY8SrXj7dWjMo2v/+H3D3dJxrt+
      4JGlEwREOJfvYqdcI5HO0hXUWDyoEjiPsUKGpZ0denJ5wjAklUiS8hxHQec9MrZ8EpzJFEnE
      4kwOjxFN95FOxrg6HmNqcYYfvXSZ6aUpJi9MEIslGes7RzoeY7x/gDtLtwkiCdK+R6UD76yc
      nu39fWb3jpgoxrm/V6UZhvz05XEOyyWmdyq8NfEyU8sPGCgW6UvFKKSibJRrpHOddVTIe/R8
      gD++/2e9Fki+VTbZxad6LZDIi0MBiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYFm33APJ88YqDuGis3WOcGgUgT6V+7SPCxdl2j3FqtAQS0xSAmKYA5EQi45P4
      k29AosUquqsbvLOf6ST0HEBOxgEEePkR/KEirlbGeVn8oQLByiocBXiJGK5xQDg71+5pv5X2
      AHIibn+b8MARGSoQbq0DUbxkDFd34HvgNQmnbtDpj7GdPZ10LFer4vnrBMtJ/O4Ywb3bkCng
      uSbu6AjC8Ph6SwttnvS7KQA5mcoBrnL8bbD19bb97eOV0aMa9TMc6ulpCSQnE0/i5fL/v5zs
      gngcYonj7Z6H112AeAyiUfB8iPrtm/dbaA8gJ+J1dePlh/HSC4QbVfxLLwMe4fISXq6Il8/j
      mgH++DhuvwR+ErdyF9cM2j36Y7QHkBNxtRpeXx5XPoJ4Cre7iqtUcdUqXrGIO9zFi2UhbOJl
      evEyUVy185ZDCkBOxOvph8MSXncvXizA6zmHl/DxCkWolPGyvXipKDhwu2uEqzt4Pd3tHvsJ
      WgLJibiVGYIVIJWF+iHBfz57+LNgdb5dYz01BSDPplpq9wTPREsgMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDEtMfOB3h39BLZt3/Vrlmkw8VjCVjZ
      bvcYp+qxAK44j8tB5525Lx0iEqHR7hlOmZZAYlrLAMIwJHCOIAgfeaMjRzMIW/6SIAxx7vgr
      ztEMApph6+t+c32RTtDynODNjSV2U8McLC8xMT7EyuYOl0b6WVnb55P5OX525TKHB7v09/YT
      1Ep8OLPML6++xq3FZXI+hIkMyUQCv1Gj7Hwu5JLcWNlkcnSY5Y01Zg+OeHukl/WaYyyb4N7m
      DtlEjK5MjoGuxFn/DcSw7z0pfnrxAaODPdxaWqdyGGGwkCNV2+EvcxsU1/fozXRxoZABoFI5
      ZKbq+PUrGa7vHrJ/UKY7FmFzJ2AiH+eDu4tMDPaSi9e5vrRFPuHxxUbA8EAXd7ZDCuV1BsbH
      fvA7LfKNlkug7u48t2am2Qwd2WSKYiZNIuoRi/o06zW2mx69qQSvjgxQq5SY3y3jAd3ZHO+d
      K3Jrq0Q0EmEgl6U7ESfhw5fL6yTiMWZXVyk1HH5YZ6lUI5dK0ZtJ0Z9Jk4rpTSrkbHnOuYfL
      /PCrjwm//PjUb2R5Y51ba9tcfeUV+hI6yvTcisVprG2+UJ8RdiYPuaP9A4z2D5zFTYk8lZZL
      oKOjKh/emeFBqQbA5u4On8w9oNFscO3eLJuVOgvra/x7fpWDUpkj51jZPTjTwUVOQ8sAIpEo
      b4wNcnNxFXDcXt9mNFbnr7dnGB0a4au5Be5s7OFV97j3YIfrS0vU9CZz8hxqGUDU95le3aQr
      GQU8hjJpbqxs0NfTx93FRfaOGsRcg72GoxnUubexRyb54nx4stjRMoC90gH79QaZZIKbKxtE
      fY9Urp8rvWkizvHW+Hm6UykifpyR3gK/ufoqWzu7Zz27yDP7zqNAzoXUA0hE9YoJwd5RIM+L
      tPwYWJEXhR7axTQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKYAxDQFIKYpADHt8U8Ay+Txhs+3aRTpeNEYkUQ3pNLtnuTU/A/Kgdl2foq2ugAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 confirmed countries' width='192'>
      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
      M3UAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
